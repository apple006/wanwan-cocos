readme
	——人工智能1号，coco1号
	

1，设计原则
	1.1 按照由详细到高层次抽象的原则设计
		1.1.1 make.function为原子神经元
			make.class(文件级file)->make.package(文件组合级folder)->make.module(模块级)...为神经扩展
			make.tool(工具与功能级)->make.system(系统级或最高级)为神神经高层次抽象
		1.1.2 系统核心
			record.history记录历史行为到核心core——学习引擎
			build选择性丰富基础神经元为构建准则
				解释：通过不断的丰富底层神经元的功能或者配置库，构建本层神经元，从而完成扩展和学习
		1.1.3 遍历行为
			pathline是一种从core核心库出发到分支库的搜索行为。每个工具级的神经元都会自带一个pathline指定
			遍历顺序，通过遍历顺序确定获取到的配置文件参数的准确性，完成配置加载。任何不同的pathline都会
			导致不同的结果。
		1.1.4 核心区与分支区
			core核心区和branch分支区都是具有相同功能特征的配置库。配置库里保存各种各样的指令配置。通过pathline
			指定的遍历顺序确定要加载的指令和配置。核心区只有一个，而branch分支区都搭载在核心区索引上，形成一个
			配置库网络。每个分支区的指令系统会有所不同，不过核心区和分支区的存储结构则是一样的。pathline的构建
			准则是由核心区向外扩展。
			
2，解释
	2.1 高自由度准则
		2.1.1 神经元
			神经元的定义由低向高定义，最基础的神经元为一个最基础的指令或者指令集构成。底层神经元的排列组合构成
			高层神经元。
		2.1.2 神经元调用为系统直接调用。调用的过程会涉及到pathline过程的加载。每个神经元都有一个pathline，pathline
			则是到配置库（核心区+分支区）去获取到配置信息。
		2.1.3 调用完成后，人工智能会形成历史记忆，并将其中有用的部分写入配置库。大部分将是核心区。这个过程将
			被视为一次学习过程。
			
		